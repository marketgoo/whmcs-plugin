<?php

/*
 * * ******************************************************************
 *
 *   CREATED BY MODULESGARDEN       ->        http://modulesgarden.com
 *   AUTHOR                         ->     michal.lu@modulesgarden.com
 *   CONTACT                        ->       contact@modulesgarden.com
 *
 *  This software is furnished under a license and may be used and copied
 *  only  in  accordance  with  the  terms  of such  license and with the
 *  inclusion of the above copyright notice.  This software  or any other
 *  copies thereof may not be provided or otherwise made available to any
 *  other person.  No title to and  ownership of the  software is  hereby
 *  transferred.
 *
 * * ******************************************************************
 */

class ConfigurableOptionsGenerator extends AbstractGenerator
{
    protected $confName;
    protected $description;

    public function __construct($id, $name)
    {
        parent::__construct($id, $name);
        $this->confName = "Configurable options for {$this->name}";
        $this->description = "Auto generated by module";
    }

    public function generate($options = array())
    {
        $this->confName = "Configurable options for {$this->name}";
        $this->description = "Auto generated by module";
        if ($this->checkIfAlreadyGenerated()) {
            return true;
        }
        $this->safeQuery("INSERT INTO tblproductconfiggroups(name,description) VALUES(?,?)", array(
            $this->confName, $this->description));
        $group_id = $this->insert_id();
        $this->safeQuery('INSERT INTO tblproductconfiglinks(gid,pid) VALUES(?,?)', array(
            $group_id, $this->id));
        $query = 'INSERT INTO tblproductconfigoptions(gid,optionname,optiontype,qtyminimum,qtymaximum,`order`,hidden) VALUES(?,?,?,?,?,0,0)';
        $query_suboptions = 'INSERT INTO tblproductconfigoptionssub(configid,optionname,sortorder,hidden) VALUES(?,?,0,0)';


        foreach ($options as $opt) {
            $this->safeQuery($query, array($group_id, $opt['optionname'] . '|' . $opt['displayname'],
                $opt['optiontype'], $opt['qtyminimum'], $opt['qtymaximum']));
            $option_id = $this->insert_id();
            foreach ($opt['suboptions'] as $sub) {
                $this->safeQuery($query_suboptions, array($option_id, $sub));
                $config_ids[] = $this->insert_id();
            }

            $currencyQuery = $this->fetch_assoc($this->safeQuery("SELECT * FROM  `tblcurrencies`  WHERE `default`=? LIMIT 1", array("1")));
            $currency = $currencyQuery['id'];
        }
        foreach ($config_ids as $config_id) {
            $this->safeQuery("INSERT INTO `tblpricing`
                           ( `type` , `currency` , `relid` , `msetupfee` , `qsetupfee` , `ssetupfee` , `asetupfee` , `bsetupfee` , `tsetupfee` , `monthly` , `quarterly` , `semiannually` , `annually` , `biennially` , `triennially`)
                                  VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)", array(
                "configoptions", $currency, $config_id, "0.00", "0.00", "0.00",
                "0.00",
                "0.00", "0.00", "0.00", "0.00", "0.00", "0.00", "0.00", "0.00"));
        }

        return true;
    }
    
    public function checkIfAlreadyGenerated($options = array())
    {
        $exists = $this->fetch_assoc($this->safeQuery("SELECT id FROM tblproductconfiggroups WHERE name=? AND description=?", array(
            $this->confName, $this->description)));
        return (isset($exists['id']) && is_numeric($exists['id']));
    }

}
